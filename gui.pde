/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.
 
 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
 // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void runButton(GButton source, GEvent event) { //_CODE_:run:899533:
  runFlag=true;
  backFlag=false;
  for (int i=0; i<16; i++) {
    for (int j=0; j<16; j++) {
      cells[i][j].blue=false;
    }
  }
} //_CODE_:run:899533:

public void resetwallclick(GButton source, GEvent event) { //_CODE_:resetwall:253478:
  for (int i=0; i<544; i++) {
    walls[i].show=true;
  }
} //_CODE_:resetwall:253478:

public void resetclick(GButton source, GEvent event) { //_CODE_:reset:763904:
  int r=14;
  for (int i=0; i<16; i++) {
    int c=r;
    for (int j=0; j<16; j++) {
      cells[i][j].value=c;
      cells[i][j].traversed=false;
      for (int a=0; a<4; a++) {
        cells[i][j].wall[a]=0;
      }

      if (j>6) {
        if (j==7)
          continue;
        c++;
      } else { 

        c--;
      }
    }
    if (i>=7) {
      if (i==7)
        continue;
      r++;
    } else {
      r--;
    }
  }
  mouse.x=20;
  mouse.y=620;
  mouse.theta = 0.0;
  runFlag=false;
  backFlag=false;
} //_CODE_:reset:763904:

public void backHomeclick(GButton source, GEvent event) { //_CODE_:backHome:222224:
  runFlag=false;
  backFlag=true;
} //_CODE_:backHome:222224:

public void slider1_change1(GSlider source, GEvent event) { //_CODE_:slider1:577526:
  frameRate(source.getValueI());
}



public void help_click(GButton source, GEvent event) { //_CODE_:help:467904:
  window1 = new GWindow(this, "Window title", 0, 0, 900, 250, false, JAVA2D);
  window1.setActionOnClose(G4P.CLOSE_WINDOW);
  window1.addDrawHandler(this, "win_draw1");
} //_CODE_:help:467904:

synchronized public void win_draw1(GWinApplet appc, GWinData data) { //_CODE_:window1:232551:
  String s1="How to use this micromouse simulator?";
  String s2="run               -->click this to make the bot run towards the center (ie to the 0 in the maze)";
  String s3="backhome   -->click this to make the bot moves towards  starting position(ie bottom left corner)";
  String s4="resetwall         -->click this to reset the wall.";
  String s5="reset             -->when you click this mouse will come to the starting position and resets its path";  
  String s6="                  and changes the flood fill to the original.this does not reset wall";
  String s7="slider            -->changes the speed of the bot moves .It basically changes the framerate of ";
  String s8="                  this  sketch so clicking button will basically becoms annoying don't click mulltiple " ;
  String s9="                  x times .min is 10 frames per second and max 24 frames per second";
  String s10="help              -->u r basically viewing this because u clicked this button";
  appc.background(230);
  appc.fill(0);
  appc.textSize(24);
  appc.text(s1, 10, 20);
  appc.textSize(18);
  appc.text(s2, 10, 50);
  appc.text(s3, 10, 70);
  appc.text(s4, 10, 90);
  appc.text(s5, 10, 110);
  appc.text(s6, 10, 130);
  appc.text(s7, 10, 150);
  appc.text(s8, 10, 170);
  appc.text(s9, 10, 190);
  appc.text(s10, 10, 210);
} //_CODE_:window1:232551:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI() {
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  if (frame != null)
    frame.setTitle("Sketch Window");
  run = new GButton(this, 10, 660, 100, 30);
  run.setText("run");
  run.addEventHandler(this, "runButton");
  resetwall = new GButton(this, 230, 660, 100, 30);
  resetwall.setText("reset wall");
  resetwall.addEventHandler(this, "resetwallclick");
  reset = new GButton(this, 340, 660, 100, 30);
  reset.setText("reset");
  reset.addEventHandler(this, "resetclick");
  backHome = new GButton(this, 120, 660, 100, 30);
  backHome.setText("backHome");
  backHome.addEventHandler(this, "backHomeclick");
  slider1 = new GSlider(this, 450, 640, 100, 50, 10.0);
  slider1.setShowLimits(true);
  slider1.setLimits(24, 10, 24);
  slider1.setNbrTicks(3);
  slider1.setShowTicks(true);
  slider1.setNumberFormat(G4P.INTEGER, 0);
  slider1.setOpaque(false);
  slider1.addEventHandler(this, "slider1_change1");
  help = new GButton(this, 560, 660, 80, 30);
  help.setText("help?");
  help.addEventHandler(this, "help_click");
}

// Variable declarations 
// autogenerated do not edit
GButton run; 
GButton resetwall; 
GButton reset; 
GButton backHome; 
GSlider slider1; 
GButton help; 
GWindow window1;

